@using LibraryManagementSystem.Models.EnumModel
@using LibraryManagementSystem.Models.ViewModel
@model BorrowedBooksViewModel

@{
    ViewData["Title"] = "Create Update Borrowed Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12 pt-3">
    <div>
        <form id="createUpdateForm">
            <div class="text-left">
                @if (Model.BorrowID == 0)
                {
                    <h3 class="">Add Borrow Book</h3>
                }
                else
                {
                    <h3 class="">Update Borrow Book</h3>
                }
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group row g-3">
                        <input id="borrowID" name="borrowID" value="@Model.BorrowID" type="hidden" />

                        @if (Model.BorrowID == 0)
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="memberID">Member</label>
                                <select id="memberID" class="form-control" data-toggle="select">
                                    <option value=0 selected>Select Member</option>
                                    @foreach (var member in @ViewBag.Members)
                                    {
                                        <option value=@member.MemberID>@member.FirstName @member.LastName</option>
                                    }
                                </select>
                            </div>
                        }
                        else
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="memberID">Member</label>
                                <select id="memberID" class="form-control" data-toggle="select">
                                    <option value=0>Select Member</option>
                                    <option value=@Model.MemberID selected>@Model.MemberName</option>
                                    @foreach (var member in @ViewBag.Members)
                                    {
                                        if (@member.MemberID != @Model.MemberID)
                                        {
                                            <option value=@member.MemberID>@member.FirstName @member.LastName</option>
                                        }
                                    }
                                </select>
                            </div>
                        }

                        @if (Model.BorrowID == 0)
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="bookID">Book</label>
                                <select id="bookID" class="form-control" data-toggle="select">
                                    <option value=0 selected>Select Book</option>
                                    @foreach (var books in @ViewBag.Books)
                                    {
                                        <option value=@books.BookID>@books.Title</option>
                                    }
                                </select>
                            </div>
                        }
                        else
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="bookID">Book</label>
                                <select id="bookID" class="form-control" data-toggle="select">
                                    <option value=0>Select Book</option>
                                    <option value=@Model.BookID selected>@Model.BookTitle</option>
                                    @foreach (var books in @ViewBag.Books)
                                    {
                                        if (@books.BookID != @Model.BookID)
                                        {
                                            <option value=@books.BookID>@books.Title</option>
                                        }
                                    }
                                </select>
                            </div>
                        }

                        <div class="col-md-6">
                            <label for="borrowDate">Borrow Date</label>
                            <input id="borrowDate" name="borrowDate" value="@Model.BorrowDate" placeholder="Borrow Date" type="date" class="form-control" />
                        </div>


                        <div class="col-md-6">
                            <label for="returnDate">Return Date</label>
                            <input id="returnDate" name="returnDate" value="@Model.ReturnDate" placeholder="Return Date" type="date" class="form-control" />
                        </div>

                        @if (Model.BorrowID == 0)
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="status">Status</label>
                                <select id="status" class="form-control" data-toggle="select">
                                    <option value=0 selected>Select Status</option>
                                    <option value=@BorrowStatus.Borrowed>@BorrowStatus.Borrowed</option>
                                    <option value=@BorrowStatus.Returned>@BorrowStatus.Returned</option>
                                    <option value=@BorrowStatus.Overdue>@BorrowStatus.Overdue</option>
                                </select>
                            </div>
                        }
                        else
                        {
                            <div class="col-lg-6 col-md-6">
                                <label for="status">Status</label>
                                <select id="status" class="form-control" data-toggle="select">
                                    <option value=0>Select Status</option>
                                    <option value=@Model.Status selected>@Model.Status</option>
                                    <option value=@BorrowStatus.Borrowed>@BorrowStatus.Borrowed</option>
                                    <option value=@BorrowStatus.Returned>@BorrowStatus.Returned</option>
                                    <option value=@BorrowStatus.Overdue>@BorrowStatus.Overdue</option>
                                </select>
                            </div>
                        }
                        
                    </div>
                </div>
            </div>
        </form>
    </div>
    <br />
    <div class="text-center pb-3">
        <button type="button" onclick="Save()" class="btn btn-primary"><i class="fa fa-save" style="font-size:13px;color:white"></i> Save</button>
        <button type="button" onclick="ClearForm()" class="btn btn-primary"><i class="fa fa-undo" style="font-size:13px;color:white"></i> Clear</button>
        <button type="button" onclick="BackToList()" class="btn btn-primary"><i class="fa fa-backward" style="font-size:13px;color:white"></i> Back</button>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

    });

    function Save() {
        $("#createUpdateForm").validate({
            rules: {
                memberID: "required",
            },
            messages: {
                memberID: "Member is required !!",
            },
            errorElement: "div"
        });

        if ($("#createUpdateForm").valid()) {

            var createObj = {
                BorrowID: $('#borrowID').val(),
                MemberID: $('#memberID').val(),
                BookID: $('#bookID').val(),
                BorrowDate: $('#borrowDate').val(),
                ReturnDate: $('#returnDate').val(),
                Status: $('#status').val()
            };

            var model = JSON.stringify(createObj);

            $.ajax({
                type: "POST",
                url: "/BorrowedBooks/CreateUpdateBorrowedBook",
                data: model,
                dataType: "json",
                contentType: "application/json",
                success: function (response) {
                    if (response.output === "Success") {
                        alert(response.message);
                        window.location.href = "/BorrowedBooks/Index";
                        return false;
                    }
                    else {
                        alert(response.message);
                        return false;
                    }
                },
                error: function (respose) {
                    alert(response.message);
                    return false;
                },
            });
        }
    }

    function ClearForm() {
        $('#borrowID').val("");
        $('#memberID').val("");
        $('#bookID').val("");
        $('#borrowDate').val("");
        $('#returnDate').val("");
        $('#status').val("");
        $("#createUpdateForm").validate().resetForm();
    }

    function BackToList() {
        window.location = "/BorrowedBooks/Index";
    }
</script>

<style type="text/css">
    .error {
        border-color: red !important;
        display: block;
    }

    div.error {
        color: red;
        display: inline;
        float: left;
    }
</style>